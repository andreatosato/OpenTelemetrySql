services:
  sampleapi:
    image: ${DOCKER_REGISTRY-}sampleapi
    build:
      context: SampleApi
      dockerfile: ./Dockerfile
    depends_on:
      - zipkin
      - db
      - otel-collector

  db:
    image: "mcr.microsoft.com/mssql/server"
    container_name: sqlserver
    ports:
        - 1433:1433
    environment:
        SA_PASSWORD: "m1Password@12J"
        ACCEPT_EULA: "Y"
    volumes:
      - sqlserverdata:/var/lib/sqlserver

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./../config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - zipkin
    
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: on-failure
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      #- 9411:9411
      - 14268:14268
      - 16686:16686
      - 14250:14250

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
    - 3000:3000

volumes:
  sqlserverdata:
    driver: local