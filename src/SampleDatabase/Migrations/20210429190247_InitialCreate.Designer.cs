// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleDatabase;

namespace SampleDatabase.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20210429190247_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleDatabase.BlogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("SampleDatabase.PostEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2021, 4, 29, 21, 2, 46, 860, DateTimeKind.Local).AddTicks(7016),
                            Text = "My Text"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2021, 4, 29, 21, 52, 46, 863, DateTimeKind.Local).AddTicks(7179),
                            Text = "My Text 2"
                        });
                });

            modelBuilder.Entity("SampleDatabase.PostUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlogEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogEntityId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogEntityId = 1,
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogEntityId = 1,
                            PostId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SampleDatabase.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Andrea",
                            Surname = "Tosato"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mario",
                            Surname = "Rossi"
                        });
                });

            modelBuilder.Entity("SampleDatabase.PostUserEntity", b =>
                {
                    b.HasOne("SampleDatabase.BlogEntity", null)
                        .WithMany("PostUsers")
                        .HasForeignKey("BlogEntityId");

                    b.HasOne("SampleDatabase.PostEntity", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("SampleDatabase.UserEntity", "User")
                        .WithMany("PostUsers")
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SampleDatabase.BlogEntity", b =>
                {
                    b.Navigation("PostUsers");
                });

            modelBuilder.Entity("SampleDatabase.UserEntity", b =>
                {
                    b.Navigation("PostUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
