services:
  sampleapi:
    image: ${DOCKER_REGISTRY-}sampleapi
    build:
      context: SampleApi
      dockerfile: ./Dockerfile
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_DEFAULT_PASS=sAmple2021
      - RABBITMQ_DEFAULT_USER=sample
      - ZIPKIN_HOSTNAME=zipkin
      - Jaeger__AgentHost=jaeger
    depends_on:
      - rabbitmq
      - zipkin
      - jaeger
      - db
      - sampleworker
      - sampleapitre
      - prometheus
      - otel-agent

  sampleapidue:
    image: ${DOCKER_REGISTRY-}sampleapidue
    build:
      context: SampleApiDue
      dockerfile: ./Dockerfile
    environment:
      - ZIPKIN_HOSTNAME=zipkin
    depends_on:
      - zipkin

  sampleapitre:
    image: ${DOCKER_REGISTRY-}sampleapitre
    build:
      context: SampleApi3
      dockerfile: ./Dockerfile
    environment:
      - ZIPKIN_HOSTNAME=zipkin
    depends_on:
      - zipkin

  sampleworker:
    image: ${DOCKER_REGISTRY-}sampleworker
    build:
      context: SampleWorker
      dockerfile: ./Dockerfile
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_DEFAULT_PASS=sAmple2021
      - RABBITMQ_DEFAULT_USER=sample
      - ZIPKIN_HOSTNAME=zipkin
    restart: on-failure
    depends_on:
      - rabbitmq
      - zipkin

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "sample"
      RABBITMQ_DEFAULT_PASS: "sAmple2021"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:        
        - "5672:5672"
        - "15672:15672"
    #volumes:
    #    #- rabbitmqdata/lib/:/var/lib/rabbitmq/
    #    - rabbitmqdata/log/:/var/log/rabbitmq/

  db:
    image: "mcr.microsoft.com/mssql/server"
    container_name: sqlserver
    ports:
        - 1433:1433
    environment:
        SA_PASSWORD: "m1Password@12J"
        ACCEPT_EULA: "Y"
    volumes:
      - sqlserverdata:/var/lib/sqlserver

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: on-failure
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      #- 9411:9411
      - 14268:14268
      - 16686:16686
      - 14250:14250

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus:/prometheus
      - ./../config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: on-failure

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector
    volumes:
      - ./../config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger
      - zipkin
    
  otel-agent:
    container_name: otel-agent
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./../config/otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "8887:8888"   # Prometheus metrics exposed by the agent
      - "14250"       # Jaeger grpc receiver
      - "14268"       # Jaeger http thrift receiver
      - "55678"       # OpenCensus receiver
      - "4317"        # OTLP gRPC receiver
      - "9411"        # Zipkin receiver
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector

  elasticsearch:
    container_name: elasticsearch
    image: docker.io/bitnami/elasticsearch:7
    environment:
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - "elasticsearch_data:/bitnami/elasticsearch"
    #command:
    #  - /bin/bash
    #  - -c
    #  - |
    #    sysctl -w vm.max_map_count=262144 &&
    #    su elasticsearch -c /etc/sysctl.conf

  apm-server.com:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.13.0
    ports:
    - 8200:8200
    command: /usr/share/apm-server/apm-server -e -c /usr/share/apm-server/apm-server.yml -E apm-server.host=apm-server:8200 --strict.perms=false
    user: apm-server
    volumes:
    - ./../config/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml
    depends_on:
    - elasticsearch
    - kibana

  kibana:
    container_name: kibana
    image: docker.io/bitnami/kibana:7
    ports:
      - "5601:5601"
    volumes:
      - "kibana_data:/bitnami/kibana"
    depends_on:
      - elasticsearch
volumes:
  sqlserverdata:
    driver: local
  rabbitmqdata:
    driver: local
  prometheus:
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local